name: Hpm
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  android:
    runs-on: "ubuntu-20.04"
    name: Library Android

    steps:
      - uses: actions/checkout@v2

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
         sudo apt-get install openjdk-8-jdk
         echo "::set-env name=JAVA_HOME::usr/lib/jvm/java-8-openjdk-amd64"
      - name: Install Android SDK and NDK
        run: |
          echo "::set-env name=PATH::/usr/lib/jvm/java-8-openjdk-amd64/jre/bin:${PATH}"
          java -version
          echo "::set-env name=ANDROID_HOME::$(pwd)/fragengine-dev/build-tools/android-sdk"
          echo "::set-env name=ANDROID_NDK_ROOT::$(pwd)/fragengine-dev/build-tools/android-ndk"
      
          #TODO add NDK
          
      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build 
      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=android.toolchain.cmake \
          -DANDROID_NDK=$ANDROID_NDK_HOME -DANDROID_ABI="armeabi-v7a with NEON" $GITHUB_WORKSPACE 

      - name: Build-Core
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE
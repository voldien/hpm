name: Hpm Linux
on: [push,pull_request]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        platform: [x32, x64]
        compiler: [gcc, clang]
        include:
        - os: ubuntu-latest
          platform: x64
          compiler: clang
        - os: ubuntu-latest
          platform: x32
          compiler: clang
        - os: ubuntu-latest
          platform: x64
          compiler: gcc
        - os: ubuntu-latest
          platform: x32
          compiler: gcc

    name: Library Linux ${{matrix.compiler}} ${{matrix.platform}}
    steps:
    - uses: actions/checkout@v1
    - name: Configure dependencies

      run: |
        sudo apt-get install check libsubunit-dev

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      env:
        CC: ${{ matrix.compiler }}
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TEST=ON -DBUILD_WITH_INSTALL=OFF \
        -DBUILD_GLBUNNY=OFF -DBUILD_ASSERT=ON -DHPM_OPT_BUILD_PACKAGES=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -VV
